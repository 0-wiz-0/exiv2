    @@@Marco@@@@@b                   ;mm                       /##Gilles###\
    j@@@#Robin",                     Brad                     /@@@Thomas@@@@Q
     @@@#       \                     ##                     @@@b     |@@@b
     @@@#          .;;;;,     ,;;;, ,;;;;  ,;;;p      .;;;   7@@      ]Alan
     @@@#           j@@@@,   ]@@#/  '@@@#  j@@@#      ]@@^           ;@@@"
     @@@Andreas@C     "@@@p @@@"     @@@b   j@@@p     @@b           @@@#/
     @@@#^7"7%#\       ^@@@@@#~      Benb    1@@@    {@#          s@@@#
     @@@#                Niels       @@@b     @@@Q  ]@#         ;@@@#/
     @@@#              ,@@##@@m      @@@b      @@@p @@C        #@@#C
     @@@#       ,/    s@@#  @@@@     @@@b       Volker       @Tuan@
    ]@@@Abhinav@@\   /@@@\    \@@@Q  @@@Q       %@@@#      /@@@@Mahesh@@#
   /@@Raphael@@@@@\ /@@@@@\     C++  Metadata  Library    /@Sridhar@@@v0.26\

Exiv2
*****

Welcome to Exiv2, a C++ library and a command line utility to read and
write Exif, IPTC and XMP image metadata. The homepage of Exiv2 is:

    http://www.exiv2.org/

See doc/ChangeLog for a list of recent changes to Exiv2.

Exiv2 API and tag reference documentation is at http://www.exiv2.org/doc
or you can build it and point your browser to doc/index.html.

For more information on XMP support in Exiv2, see doc/README-XMP.

-----------------------------------------------------------------
Puzzle with autotools/--with-adobe
----------------------------------

The --with-adobe code is new (added on Monday/Tuesday).
It's very much "Work in Progress" and will get lots more polishing.
This builds and links on Mac and Linux (Cygwin isn't ready yet).
Autotools isn't used with Visual Studio

Default build (which compile/links xmpsdk/src) is fine (and passes test suite)
$ sudo make distclean ; make config ; ./configure ; make ; sudo make install ; make samples ; make tests

To build with the external Adobe SDK:

$ sudo make distclean ; make config ; ./configure --with-adobe ; make

Linux --with-adobe is working when I remove calls to DeleteNamespace in src/xmp.cpp.
The test suite is mostly OK.  Some XMP output format has changed.
There are some test crashes to be investigated.

So, this issue only concerns linking on the Mac.

The following command works:
$ bin/exiv2 http://clanmills.com/Stonehenge.jpg is working

The following command crashes when it attempts to execute XMPsdk code
$ bin/exiv2 --verbose --version
........
config_path=/Users/rmills/.exiv2
uid=501
euid=501
gid=20
dyld: lazy symbol binding failed: Symbol not found: _WXMPMeta_Initialize_1
  Referenced from: /Users/rmills/gnu/github/exiv2/src/.libs/libexiv2.26.dylib
  Expected in: flat namespace

dyld: Symbol not found: _WXMPMeta_Initialize_1
  Referenced from: /Users/rmills/gnu/github/exiv2/src/.libs/libexiv2.26.dylib
  Expected in: flat namespace

Abort trap: 6
$

This is correct. libXMPCore.a is not in the mix.

ls -alt src/.libs/libexiv2.26.dylib
-rwxr-xr-x+ 1 rmills staff 2238124 Aug 17 11:07 src/.libs/libexiv2.26.dylib
                           -------
Edit src/Makefile#242 and change:
	@$(LIBTOOL) --mode=link $(LINK.cc) -o ../bin/$@ $(LIBRARY) $(EXIV2OBJ) $(EXIV2COBJ) -rpath $(libdir)
to:
	@$(LIBTOOL) --mode=link $(LINK.cc) -lXMPCore -o ../bin/$@ $(LIBRARY) $(EXIV2OBJ) $(EXIV2COBJ) -rpath $(libdir)

$ touch src/version.cpp src/exiv2.cpp ; make
$ ls -alt src/.libs/libexiv2.26.dylib
-rwxr-xr-x+ 1 rmills staff 4312308 Aug 17 11:17 src/.libs/libexiv2.26.dylib
                           -------
$ bin/exiv2
dyld: Symbol not found: __ZNSiD0Ev
  Referenced from: /Users/rmills/gnu/github/exiv2/src/.libs/libexiv2.26.dylib
  Expected in: flat namespace
 in /Users/rmills/gnu/github/exiv2/src/.libs/libexiv2.26.dylib
Abort trap: 6
605 rmills@rmillsmbp:~/gnu/github/exiv2 $

$ c++filt _ZNSiD0Ev
std::basic_istream<char, std::char_traits<char> >::~basic_istream()

It appears that libexiv2.26.dylib isn't linked to the STL libraries.
However I think problem may be with the "flat namespace" which tells the
dynamic linker to search for library names.  The search order is:

$ otool -L bin/.libs/exiv2
bin/.libs/exiv2:
	/usr/local/lib/libexiv2.26.dylib (compatibility version 26.0.0, current version 26.0.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.60.2)
	/usr/local/lib/libintl.8.dylib (compatibility version 10.0.0, current version 10.2.0)
	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0)
	/usr/local/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.11)
	/usr/local/lib/libexpat.1.dylib (compatibility version 8.0.0, current version 8.0.0)
	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)
So, when he's loading libexiv2.26.dylib, he needs a symbol from libc++.1.dylib

Amazingly, I got it to work on Wednesday morning.
I must have been confused.  Something was working!

Notes (mostly to remind of painful discoveries)
-----------------------------------------------

How does the build get generated?
$ make config
This generates ./configure by reading config/configure.ac

When you use --with-adobe, CXXFLAGS and LDFLAGS are modified and ENABLE_XMP is set to 2016.
Makefile has code to execute the script xmpsdk/buildXMPsdk.sh which
downloads and builds the XMPsdk to create libCore.a (which we need) and libFiles.a

config/config.mk.in is converted into config/config.mk and included in xmpsdk/src/Makefile
This is really ugly.  config.mk also messes with CPPFLAGS and LDFLAGS

To get -lXMPCore into the mix, set XMPSDK_LIBS in config/config.mk.in
        XMPSDK_LIBS     = -lXMPCore

508 rmills@rmillsmbp:~/gnu/github/exiv2 $ finder Makefile | xargs grep -H config.mk | grep include
./contrib/organize/Makefile:include $(top_srcdir)/config/config.mk
./doc/Makefile:include $(top_srcdir)/config/config.mk
./samples/Makefile:include $(top_srcdir)/config/config.mk
./src/Makefile:include $(top_srcdir)/config/config.mk
./xmpsdk/src/Makefile:include $(top_srcdir)/config/config.mk
509 rmills@rmillsmbp:~/gnu/github/exiv2 $





Building and Installing
=======================

You can build the libraries in the following ways:

1 UNIX-like systems (including GNU/Linux, MacOS-X, Cygwin (32 and 64), MinGW (32 and 64)
  - general notes follow
  - FAQ concerning Cygwin/MSYS and Mac OS X:
    http://dev.exiv2.org/projects/exiv2/wiki/FAQ

2 Microsoft Visual C++
  - see msvc/ReadMe.txt      (32bit and 64bit builds Visual Studio 2005,08,10,12,13,15)

3 CMake (support for cmake on all platforms except MinGW)
  - see README-CMAKE for more information

To build a commercial version of the Exiv2 library, see also section
"Commercial version" at the end of this file.

On UNIX-like systems, use the GNU configure script. Run the following
commands from the top directory (containing this file) to configure,
build and install the library and utility:

    $ ./configure
    $ make
    $ sudo make install  (Cygwin/MinGW $ make install)

Caution:
    If you downloaded the source code from the subversion repository,
    you will have to generate the configure script:

    $ make config
    $ ./configure
    $ make
    $ sudo make install  (Cygwin/MinGW $ make install)

To build the sample applications:

    $ make samples

The default install locations are /usr/local/lib for the library,
/usr/local/bin for the exiv2 utility and /usr/local/include/exiv2 for the
header files. Use the --prefix=directory option of the configure script to
change the default. Run './configure --help' to see a list of all options.

To uninstall Exiv2 from a UNIX-like system, run:

    $ sudo make uninstall

Dependencies
============

The following libexiv2 features are enabled by default and may*)
require external libraries. They can be controlled through configure
options. See also './configure --help'.

Feature                     Package   Configure options
--------------------------  --------  ----------------------------
PNG image support           zlib      --without-zlib
                                      --with-zlib=DIR
Native language support     gettext   --disable-nls
Characterset conversions    libiconv  --without-libiconv-prefix
                                      --with-libiconv-prefix[=DIR]
XMP support                 expat     --disable-xmp
                                      --with-expat=DIR

zlib         http://zlib.net/
gettext  *)  http://www.gnu.org/software/gettext/
libiconv *)  http://www.gnu.org/software/libiconv/
expat        http://expat.sourceforge.net/

*) Some systems have gettext and iconv in libc. The configure script
should detect this.

On Linux, it is usually best to install the dependencies through the
package management system of the distribution together with the
corresponding development packages (for the header files and static
libraries).

To build the sample programs in the samples/ directory ('make samples'),
you also need to have the pkg-config program.

To generate the documentation ('make doc'), you will further need
doxygen, graphviz, python and xsltproc.

pkg-config   http://pkg-config.freedesktop.org/wiki/
doxygen      http://www.doxygen.org/
graphviz     http://www.graphviz.org/
python       http://www.python.org/
xsltproc     http://xmlsoft.org/XSLT/
md5sum       http://www.microbrew.org/tools/md5sha1sum/

Troubleshooting
===============

If you have problems building Exiv2 on UNIX-like systems, check the
generated config/config.mk and config/config.h files. You should *not*
need to modify any Makefile directly, in particular not src/Makefile!

Support
=======

All project resources are accessible from the project website at

    http://dev.exiv2.org/wiki/exiv2

Please send feedback or queries to the Exiv2 forum. For new bug reports
and feature requests, please open an issue.

Linking your own code with Exiv2
================================

A pkg-config .pc file is installed together with the library.
Application developers can use pkg-config(1) to obtain correct compile
and link time flags for the Exiv2 library. See samples/Makefile for an
example.

If you downloaded Exiv2 directly from the subversion repository, and
you want to build it using the GNU configure script, then you need to
have GNU Autoconf installed on your system and create the configure
script as the first step:

    $ make config

Then run the usual './configure; make; make install' commands.

Exiv2 uses GNU Libtool in order to build shared libraries on a variety
of systems. While this is very nice for making usable binaries, it can
be a pain when trying to debug a program. For that reason, compilation
of shared libraries can be turned off by specifying the
--disable-shared option to the configure script.

License
=======

Copyright (C) 2004-2017 Andreas Huggel <ahuggel@gmx.net>

Exiv2 is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your
option) any later version.

Exiv2 is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, 5th Floor, Boston,
MA 02110-1301 USA.

Commercial version
==================

If you have a commercial license, you must disable NLS support and
the conversion of Nikon lens data to readable lens names to build a
commercial version of the Exiv2 library.

To do this on Windows, compile the library with the preprocessor
symbol EXV_COMMERCIAL_VERSION defined in msvc\include\exv_msvc.h

On UNIX-like systems, run the configure
script with the options --enable-commercial --disable-nls
--disable-lensdata.

# That's all Folks
##
